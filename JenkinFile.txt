pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the code...'
                // Example: Use Maven as the build automation tool
                sh 'mvn clean package'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests...'
                // Example: Use JUnit or TestNG for tests
                sh 'mvn test'
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Performing code analysis...'
                // Example: Use SonarQube for code analysis
                sh 'sonar-scanner'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Performing security scan...'
                // Example: Use OWASP Dependency-Check
                sh 'dependency-check.sh'
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging...'
                // Example: Deploy to AWS EC2
                sh 'scp target/my-app.war ec2-user@staging-server:/opt/tomcat/webapps/'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                // Example: Use Selenium for testing on staging
                sh 'selenium-side-runner -s server-side-tests'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production...'
                // Example: Deploy to AWS EC2
                sh 'scp target/my-app.war ec2-user@prod-server:/opt/tomcat/webapps/'
            }
        }
    }

    post {
        always {
            emailext (
                to: 'developer@example.com',
                subject: "Jenkins Pipeline: ${currentBuild.fullDisplayName}",
                body: "Pipeline completed with status: ${currentBuild.currentResult}",
                attachLog: true
            )
        }
    }
}
